---
import type { MarkdownHeading } from "astro";
import Prose from "../../components/prose.astro";
import { getCollection, render } from "astro:content";
import StoreLayout from "../../layouts/StoreLayout.astro";

export const prerender = true;


export async function getStaticPaths() {
    const articles = await getCollection("articles");
    
    return articles.map((article) => ({
        params: {
            slug: article.rendered?.metadata
                ? (
                      article.rendered.metadata
                          .headings as unknown as MarkdownHeading[]
                  )[0].slug
                : article.id,
        },
        props: { article },
    }));
}

const { article } = Astro.props;

if (article === undefined) {
    return new Response("Article not found", { status: 404 });
}

const { Content } = await render(article);

const allArticles = await getCollection("articles");

const relatedArticles = allArticles.filter(
    (relatedArticle) =>
        relatedArticle.data.category === article.data.category &&
        relatedArticle.id !== article.id,
);
---

<StoreLayout title={article.data.title} frontmatter={article.data}>
    <section class="px-4 py-8">
        <Prose>
            <Content />
        </Prose>

        <pre>{JSON.stringify(relatedArticles, null, 2)}</pre>
    </section>
</StoreLayout>
